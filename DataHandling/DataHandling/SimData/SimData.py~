from DataHandling import DataObject
import numpy as _np


class SimData(DataObject):
    def __init__(self, SampleFreq, Freqs, Amplitudes, NoiseStdDev, TimeTuple):
        self.SampleFreq = SampleFreq
        self.Freqs = Freqs
        self.Amplitudes = Amplitudes
        self.NoiseStdDev = NoiseStdDev
        self.TimeTuple = TimeTuple
        self.GenerateSimulatedData()
        self.getTimeData()
        self.getPSD()
        return None

    def getTimeData(self):
        return self.time, self.Voltage

    def GenerateSimulatedData(self):
        Ts = 1/self.SampleFreq
        self.time = _np.arange(self.TimeTuple[0], self.TimeTuple[1], Ts)
        self.TrueSignals = {}
        for Freq in self.Freqs:
            w = 2*_np.pi*Freq
            self.TrueSignals[Freq] = _np.sin(w*self.time)
        self.Noise = _np.random.normal(0, NoiseStdDev, len(self.time))
        self.Voltage = self.Noise
        for signal in [self.TrueSignals[key] for key in self.TrueSignals]:
            self.Voltage += signal
        return None

